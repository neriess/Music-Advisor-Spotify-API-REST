/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package music.advisor;

import java.io.IOException;
import java.util.Scanner;

public class Main {

    public static void main(String[] args) throws IOException {
        Scanner scanner = new Scanner(System.in);
        OAuthServer oAuthServer = new OAuthServer();

        String[] userInput;
        Goal goal;
        System.out.println("""

                Write:
                -"auth" for authorization,
                -"new" for list of new albums,
                -"featured" for list of Spotify featured playlists,
                -"categories" for list of all available categories on Spotify,
                -"playlists {name of category}" for playlists of this category,
                -"exit" for exit the program.
                """);

        while(true) {
            userInput = scanner.nextLine().toLowerCase().split(" ",2);
            goal = setUserGoal(userInput[0]);

            if (goal == null) {
                System.out.println("Wrong input provided!");
            } else {
                startMusicAdvisor(oAuthServer, goal, userInput);
            }
        }
    }

    private static void startMusicAdvisor(OAuthServer oAuthServer, Goal goal, String[] userInput) throws IOException {
        MusicAdvisor musicAdvisor = new MusicAdvisor();
        if (!oAuthServer.isAuthorized() && goal != Goal.AUTH && goal != Goal.EXIT) {
            oAuthServer.notAuthorized();
            return;
        }
        switch (goal) {
            case AUTH -> oAuthServer.authorizeUser();
            case NEW -> musicAdvisor.showNew();
            case FEATURED -> musicAdvisor.showFeatured();
            case CATEGORIES -> musicAdvisor.showCategories();
            case PLAYLIST -> musicAdvisor.showPlaylist(userInput[1]);
            case EXIT -> musicAdvisor.exit();
            default -> System.out.println("Wrong input provided!");
        }
    }

    private static Goal setUserGoal(String userInput) {
        return switch (userInput) {
            case "auth" -> Goal.AUTH;
            case "new" -> Goal.NEW;
            case "featured" -> Goal.FEATURED;
            case "categories" -> Goal.CATEGORIES;
            case "playlists" -> Goal.PLAYLIST;
            case "exit" -> Goal.EXIT;
            default -> null;
        };
    }
}
